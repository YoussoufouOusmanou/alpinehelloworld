pipeline {
    environment {
    IMAGE_NAME = "alpinehellowordl"
    IMAGE_TAG = "latest"
    STAGING = "ousmanou-staging"
    PRODUCTION = "ousmanou-prod"
    }

    agent none
    stages {
       stage('build image'){
         agent any
         steps {
           script {
              sh 'docker build -t youssoufou/$IMAGE_NAME:$IMAGE_TAG .'
           }
         }
      }


       stage('run container based on builded iamge'){
         agent any
         steps {
         script {
              sh '''
                docker run --name $IMAGE_NAME -d -p 80:5000 -e PORT=5000 youssoufou/$IMAGE_NAME:$IMAGE_TAG
              sleep 5
               '''
           }
         }
      }

     stage('Test image'){
         agent any
         steps {
           script {
              sh '''
               curl http://localhost | grep -q "hello world!"
               '''
           }
         }
      }
      stage('clean container'){
         agent any
         steps {
           script {
              sh '''
               docker stop $IMAGE_NAME
               docker rm $IMAGE_NAME
               '''
           }
         }
      }
      
     stage('push image in staging and deploy it'){
       when {
          expression { GIT_BRANCH == 'origin/master'}
          }
       agent any
       environment {
         HEROKU_API_KEY = credentials('heroku_api_key')
       }
    steps {
           script {
              sh '''
              heroku container:login
              heroku create $STAGING || echo "projet already existe"
              heroku container:push -a $STAGING web
              heroku container:release -a $STAGING web
               '''
           }
         }
      }   
       stage('Push image in production and deploy it') {
       when {
              expression { GIT_BRANCH == 'origin/master' }
            }
      agent any
      environment {
          HEROKU_API_KEY = credentials('heroku_api_key')
      }  
      steps {
          script {
            sh '''
              heroku container:login
              heroku create $PRODUCTION || echo "project already exist"
              heroku container:push -a $PRODUCTION web
              heroku container:release -a $PRODUCTION web
            '''
          }
        }
      }
           }
      } 
      
